# name: Deploy to Production

# on:
#   workflow_dispatch:
#     inputs:
#       confirmation:
#         description: 'Type "deploy-to-production" to confirm'
#         required: true

# jobs:
#   validate-input:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Validate confirmation
#         if: github.event.inputs.confirmation != 'deploy-to-production'
#         run: |
#           echo "❌ Invalid confirmation. Deployment cancelled."
#           exit 1
  
#   deploy:
#     needs: validate-input
#     runs-on: ubuntu-latest
#     environment: production
    
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
      
#       - name: Configure kubectl
#         run: |
#           echo "${{ secrets.KUBECONFIG_PROD }}" | base64 -d > /tmp/kubeconfig
#           echo "KUBECONFIG=/tmp/kubeconfig" >> $GITHUB_ENV
      
#       - name: Set up Helm
#         uses: azure/setup-helm@v3
#         with:
#           version: '3.12.0'
      
#       - name: Add Airbyte Helm repo
#         run: |
#           helm repo add airbyte https://airbytehq.github.io/helm-charts
#           helm repo update
      
#       - name: Deploy secrets
#         run: |
#           # Install sops
#           wget -O /usr/local/bin/sops https://github.com/mozilla/sops/releases/download/v3.8.1/sops-v3.8.1.linux
#           chmod +x /usr/local/bin/sops
          
#           # Decrypt and apply secrets
#           sops -d secrets/prod/secrets.enc.yaml | kubectl apply -f -
      
#       - name: Create backup before deployment
#         run: |
#           # Backup current release
#           helm get values airbyte -n airbyte > /tmp/backup-values.yaml || true
#           kubectl get all -n airbyte -o yaml > /tmp/backup-manifests.yaml || true
      
#       - name: Deploy Airbyte
#         run: |
#           helm upgrade --install airbyte airbyte/airbyte \
#             --namespace airbyte \
#             --create-namespace \
#             -f base/helm/values.yaml \
#             -f environments/prod/values.yaml \
#             --wait \
#             --timeout 15m
      
#       - name: Verify deployment
#         run: |
#           kubectl rollout status deployment -n airbyte --timeout=10m
#           kubectl get pods -n airbyte
      
#       - name: Run smoke tests
#         run: |
#           # Wait for all pods to be ready
#           kubectl wait --for=condition=ready pod --all -n airbyte --timeout=600s
          
#           # Check if webapp is accessible
#           kubectl run curl-test --image=curlimages/curl:latest --rm -it --restart=Never -n airbyte -- \
#             curl -f http://airbyte-webapp-svc || exit 1
      
#       - name: Notify on success
#         if: success()
#         run: |
#           echo "✅ Production deployment successful"
#           # Add notification integrations here
      
#       - name: Rollback on failure
#         if: failure()
#         run: |
#           echo "❌ Deployment failed, initiating rollback"
#           helm rollback airbyte -n airbyte
#           # Add incident notification here

