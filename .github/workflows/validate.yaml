name: Validate Manifests

on:
  pull_request:
    paths:
      - 'environments/**'
      - 'base/**'
      - 'manifests/**'
      - 'argocd/**'

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: '3.12.0'
      
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
      
      - name: Add Airbyte Helm repo
        run: |
          helm repo add airbyte https://airbytehq.github.io/helm-charts
          helm repo update
      
      - name: Validate Helm values - dev
        run: |
          helm template test airbyte/airbyte \
            -f base/helm/values.yaml \
            -f environments/dev/values.yaml \
            --dry-run
      
      - name: Validate Helm values - staging
        run: |
          helm template test airbyte/airbyte \
            -f base/helm/values.yaml \
            -f environments/staging/values.yaml \
            --dry-run
      
      - name: Validate Helm values - prod
        run: |
          helm template test airbyte/airbyte \
            -f base/helm/values.yaml \
            -f environments/prod/values.yaml \
            --dry-run
      
      - name: Lint YAML files
        run: |
          # Install yamllint
          pip install yamllint
          
          # Lint all YAML files
          find . -name "*.yaml" -o -name "*.yml" | \
            grep -v ".github" | \
            xargs yamllint -d relaxed || true
      
      - name: Check for unencrypted secrets
        run: |
          # Fail if unencrypted passwords/secrets found
          ! grep -r "password:\|secret:\|token:" environments/ \
            --include="*.yaml" | \
            grep -v "existingSecret\|secretName\|\.enc\.yaml"
      
      - name: Validate Kustomize
        run: |
          kubectl kustomize environments/dev/ > /dev/null
          kubectl kustomize environments/staging/ > /dev/null
          kubectl kustomize environments/prod/ > /dev/null
      
      - name: Comment PR with validation results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'âœ… All validations passed! Manifests are ready to deploy.'
            })

