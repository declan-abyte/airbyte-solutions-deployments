name: Deploy to Dev

on:
  push:
    branches:
      - main
    paths:
      - 'environments/dev/**'
      - 'base/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: development
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure kubectl
        run: |
          echo "${{ secrets.KUBECONFIG_DEV }}" | base64 -d > /tmp/kubeconfig
          echo "KUBECONFIG=/tmp/kubeconfig" >> $GITHUB_ENV
      
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: '3.12.0'
      
      - name: Add Airbyte Helm repo
        run: |
          helm repo add airbyte https://airbytehq.github.io/helm-charts
          helm repo update
      
      - name: Deploy secrets
        if: false  # Enable when SOPS is configured
        run: |
          # Install sops
          wget -O /usr/local/bin/sops https://github.com/mozilla/sops/releases/download/v3.8.1/sops-v3.8.1.linux
          chmod +x /usr/local/bin/sops
          
          # Decrypt and apply secrets
          sops -d secrets/dev/secrets.enc.yaml | kubectl apply -f -
      
      - name: Deploy Airbyte
        run: |
          helm upgrade --install airbyte airbyte/airbyte \
            --namespace airbyte \
            --create-namespace \
            -f base/helm/values.yaml \
            -f environments/dev/values.yaml \
            --wait \
            --timeout 10m
      
      - name: Verify deployment
        run: |
          kubectl rollout status deployment -n airbyte --timeout=5m
          kubectl get pods -n airbyte
      
      - name: Run smoke tests
        run: |
          # Wait for webapp to be ready
          kubectl wait --for=condition=ready pod \
            -l app.kubernetes.io/component=webapp \
            -n airbyte --timeout=300s
          
          # Port-forward and check health
          kubectl port-forward svc/airbyte-webapp 8080:80 -n airbyte &
          sleep 10
          
          # Check if webapp responds
          curl -f http://localhost:8080 || exit 1
      
      - name: Notify on success
        if: success()
        run: |
          echo "✅ Deployment to dev successful"
          # Add Slack notification here if needed
      
      - name: Notify on failure
        if: failure()
        run: |
          echo "❌ Deployment to dev failed"
          # Add Slack/PagerDuty notification here

